generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model clientes {
  id           Int          @id @default(autoincrement())
  nombre       String?      @db.VarChar(15)
  apellido     String?      @db.VarChar(15)
  id_localidad Int?
  dni          BigInt?
  celular      BigInt?
  localidades  localidades? @relation(fields: [id_localidad], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "clientes_ibfk_1")
  servicios    servicios[]

  @@index([id_localidad], map: "id_localidad")
}

model localidades {
  id            Int        @id
  codigo_postal Int?
  nombre        String?    @db.VarChar(15)
  clientes      clientes[]
}

model modelos {
  id              Int              @id
  nombre          String?          @db.VarChar(15)
  tipo_vehiculo   Int?
  tipos_vehiculos tipos_vehiculos? @relation(fields: [tipo_vehiculo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "modelos_ibfk_1")
  vehiculos       vehiculos[]

  @@index([tipo_vehiculo], map: "tipo_vehiculo")
}

model servicios {
  id           Int       @id @default(autoincrement())
  fecha        DateTime? @db.Date
  hora_entrada DateTime? @db.Time(0)
  hora_salida  DateTime? @db.Time(0)
  id_vehiculo  Int?
  id_cliente   Int?
  clientes     clientes? @relation(fields: [id_cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "servicios_ibfk_2")

  @@index([id_cliente], map: "id_cliente")
  @@index([id_vehiculo], map: "id_vehiculo")
}

model servicios_tipos_servicios_tipos_vehiculos {
  id                              Int                              @id @default(autoincrement())
  precio_total                    Int?
  id_servicio                     Int?
  id_tipo_servicio_vehiculo       Int?
  tipos_servicios_tipos_vehiculos tipos_servicios_tipos_vehiculos? @relation(fields: [id_tipo_servicio_vehiculo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "servicios_tipos_servicios_tipos_vehiculos_ibfk_2")

  @@index([id_servicio], map: "id_servicio")
  @@index([id_tipo_servicio_vehiculo], map: "id_tipo_servicio_vehiculo")
}

model tipos_servicios {
  id     Int     @id @default(autoincrement())
  nombre String? @db.VarChar(25)
}

model tipos_servicios_tipos_vehiculos {
  id                                        Int                                         @id
  id_tipo_servicio                          Int?
  id_tipo_vehiculo                          Int?
  servicios_tipos_servicios_tipos_vehiculos servicios_tipos_servicios_tipos_vehiculos[]
  tipos_vehiculos                           tipos_vehiculos?                            @relation(fields: [id_tipo_vehiculo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tipos_servicios_tipos_vehiculos_ibfk_2")

  @@index([id_tipo_servicio], map: "id_tipo_servicio")
  @@index([id_tipo_vehiculo], map: "id_tipo_vehiculo")
}

model tipos_vehiculos {
  id                              Int                               @id
  nombre                          String?                           @db.VarChar(15)
  modelos                         modelos[]
  tipos_servicios_tipos_vehiculos tipos_servicios_tipos_vehiculos[]
}

model vehiculos {
  id        Int      @id @default(autoincrement())
  patente   String?  @db.VarChar(7)
  id_modelo Int?
  modelos   modelos? @relation(fields: [id_modelo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vehiculos_ibfk_1")

  @@index([id_modelo], map: "id_modelo")
}

model usuarios {
  id       Int    @id @default(autoincrement())
  nombre   String @db.VarChar(50)
  apellido String @db.VarChar(50)
  email    String @unique(map: "email") @db.VarChar(50)
  pass     String @db.VarChar(100)
}
